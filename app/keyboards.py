from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import WebAppInfo
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder  # –±–∏–ª–¥–µ—Ä—ã

# –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É ----------------------------------
# –ø—Ä–∏ –∫–ª–∏–∫–µ —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —á–∞—Ç, –µ–≥–æ –≤–∏–¥–∏—Ç —é–∑–µ—Ä
reply_kb = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥')],
    [KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞'), KeyboardButton(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã')]
],
    resize_keyboard=True, input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é ‚¨áÔ∏è'
)

# inline –∫–Ω–æ–ø–∫–∏ ---------------------------------
# –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —á–∞—Ç
# –ø–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –µ—â–µ —á—Ç–æ-—Ç–æ, –∫—Ä–æ–º–µ —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä. url)
# –∏–ª–∏ –Ω—É–∂–µ–Ω callback, —á—Ç–æ–±—ã –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å (—Å–º. —Å–ª–µ–¥—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É)
inline_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(
        text='–ù–∞—á–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∑–Ω–∞–Ω–∏–π ü•≤',
        # url='https://falkov-ru-en.netlify.app/',
        web_app=WebAppInfo(url='https://falkov-ru-en.netlify.app/')
    )
    ]
])

# callback inline –∫–Ω–æ–ø–∫–∏ ------------------------
# —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º callback
# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —Ö–µ–Ω–¥–ª–µ—Ä–æ–º —Å —Ñ–∏–ª—å—Ç—Ä–æ–º F - @router.callback_query(F.data == 'catalog')
# callback –Ω–µ –≤–∏–¥–∏—Ç —é–∑–µ—Ä, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å ID –∏ –¥—Ä.
callback_kb = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')],
    [
        InlineKeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞', callback_data='basket'),
        InlineKeyboardButton(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã', callback_data='contacts')
    ]
])


# –±–∏–ª–¥–µ—Ä—ã =================================================
cars = ['Tesla', 'Mersedes', 'bmw']


# reply builder ---------------------------------
async def reply_kb_cars():
    keyboard = ReplyKeyboardBuilder()
    for car in cars:
        keyboard.add(KeyboardButton(text=car))
    return keyboard.adjust(2).as_markup()  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É


# inline builder --------------------------------
async def inline_kb_cars():
    keyboard = InlineKeyboardBuilder()
    for car in cars:
        keyboard.add(InlineKeyboardButton(
            text=car, url='https://falkov-ru-en.netlify.app/'))
    return keyboard.adjust(2).as_markup()  # 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥—É


# —Ä–∞–∑–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã --------------------------------
# async def client_name(name):
#     return ReplyKeyboardMarkup(keyboard=[
#         [KeyboardButton(text=name)]
#     ],
#         resize_keyboard=True,
#         input_field_placeholder='–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –∫–∞–∫ –µ—Å—Ç—å'
#     )

# async def client_location():
#     return ReplyKeyboardMarkup(keyboard=[
#         [KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é', request_location=True)]
#     ],
#         resize_keyboard=True,
#         input_field_placeholder='–í–∞—à –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–æ—Ü–∏—é'
#     )

# async def client_phone():
#     return ReplyKeyboardMarkup(keyboard=[
#         [KeyboardButton(text='‚òéÔ∏è  –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)]
#     ],
#         resize_keyboard=True,
#         input_field_placeholder='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–º ‚¨áÔ∏è'
#     )

# async def categories():
#     keyboard = InlineKeyboardBuilder()
#     all_categories = await get_all_categories()
#     for category in all_categories:
#         keyboard.add(InlineKeyboardButton(text=category.name,
#                      callback_data=f'category_{category.id}'))
#     return keyboard.adjust(2).as_markup()

# async def cards(category_id):
#     keyboard = InlineKeyboardBuilder()
#     all_cards = await get_cards_by_category(category_id)
#     for card in all_cards:
#         keyboard.row(InlineKeyboardButton(  # –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –≤ –Ω–æ–≤—ã–π —Ä—è–¥
#             text=f'{card.name} | {card.price} rub',
#             callback_data=f'card_{card.id}')
#         )
#     keyboard.row(InlineKeyboardButton(
#         text='üîô –ù–∞–∑–∞–¥', callback_data='categories'))
#     return keyboard.as_markup()

# async def back_to_categories(category_id, card_id):
#     return InlineKeyboardMarkup(
#         inline_keyboard=[
#             [InlineKeyboardButton(
#                 text='–ö—É–ø–∏—Ç—å', callback_data=f'buy_{card_id}')],
#             [InlineKeyboardButton(
#                 text='üîô –ù–∞–∑–∞–¥', callback_data=f'category_{category_id}')]
#         ])
